{{- if .Values.ingress.enabled }}
{{- $serviceName := include "verdaccio.fullname" . -}}
{{- $servicePort := .Values.service.port -}}
{{- $paths := .Values.ingress.paths -}}
{{- $ingressExtraPaths := .Values.ingress.extraPaths -}}
{{- if .Values.ingress.useExtensionsApi }}
apiVersion: extensions/v1beta1
{{- else }}
apiVersion: networking.k8s.io/v1
{{- end }}
kind: Ingress
metadata:
  name: {{ template "verdaccio.fullname" . }}
  labels:
    {{- include "verdaccio.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- include "tplvalues.render" (dict "value" . "context" $) | nindent 4 }}
  {{- end }}
spec:
  rules:
    {{- if .Values.ingress.hosts }}
    {{- range $host := .Values.ingress.hosts }}
    - host: {{ tpl $host $ }}
      http:
        paths:
          {{- range $ingressExtraPaths }}
          - path: {{ default "/" .path | quote }}
            backend:
              service:
                name: {{ default $serviceName .service }}
                port:
                  number: {{ default $servicePort .port }}
          {{- end }}
          {{- range $p := $paths }}
          - path: {{ $p }}
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $servicePort }}
          {{- end -}}
    {{- end -}}
    {{- else }}
    - http:
        paths:
    {{- range $p := $paths }}
          - path: {{ $p }}
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $servicePort }}
    {{- end -}}
    {{- end -}}
  {{- if .Values.ingress.tls }}
  tls:
    {{- toYaml .Values.ingress.tls | nindent 4 }}
  {{- end -}}
{{- end}}
